trigger:
  branches:
    include:
      - master
      - refs/tags/*

stages:
  - template: ci/compiler-tests.yml
  - template: ci/unit-tests.yml
  - stage: Build
    dependsOn: [compiler_tests, unit_tests]
    displayName: "Build wheels for Linux, macOS, and Windows"
    jobs:
      - template: ci/manylinux-wheels-job.yml
      - template: ci/macos-win-wheels-job.yml

  - stage: PyPI
    displayName: "Upload wheels to PyPI"
    dependsOn: Build
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - job: upload_wheels
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'Wheels'
          - task: TwineAuthenticate@1
            displayName: 'Twine Authenticate'
            inputs:
              pythonUploadServiceConnection: pypiupload
          - task: UsePythonVersion@0
          - script: python -m pip install --upgrade pip setuptools wheel twine
            displayName: Install tools
          - script: |
              python -m twine upload -r "pypiupload" --config-file $(PYPIRC_PATH) $(System.ArtifactsDirectory)/Wheels/*
            displayName: Upload wheels

