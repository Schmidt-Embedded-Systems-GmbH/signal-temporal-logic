trigger:
  branches:
    include:
      - master
      - refs/tags/*

stages:
  - stage: Build
    displayName: "Build wheels for Linux and macOS"
    variables:
      CIBW_BUILD: "cp3?-manylinux* pp3?-manylinux*"
      CIBW_SKIP: "*-win32 *-macosx_x86_64"
      CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
      CIBW_DEPENDENCY_VERSIONS: latest
    jobs:
      - job: Build_manylinux
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: UsePythonVersion@0
          - template: azure-devops/install-deps.yml
          - script: python -m cibuildwheel --output-dir wheelhouse .
            displayName: Build wheel
          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: 'wheelhouse'
              artifactName: 'Wheels'

      - job: Build_rest
        strategy:
          matrix:
            macos-latest-py35:
              VM_IMAGE: macos-latest
              PYTHON_VERSION: 3.5
            macos-latest-py36:
              VM_IMAGE: macos-latest
              PYTHON_VERSION: 3.6
            macos-latest-py37:
              VM_IMAGE: macos-latest
              PYTHON_VERSION: 3.7
            macos-latest-py38:
              VM_IMAGE: macos-latest
              PYTHON_VERSION: 3.8
            windows-latest-py35:
              VM_IMAGE: windows-latest
              PYTHON_VERSION: 3.5
            windows-latest-py36:
              VM_IMAGE: windows-latest
              PYTHON_VERSION: 3.6
            windows-latest-py37:
              VM_IMAGE: windows-latest
              PYTHON_VERSION: 3.7
            windows-latest-py38:
              VM_IMAGE: windows-latest
              PYTHON_VERSION: 3.8
        pool:
          vmImage: '$(VM_IMAGE)'
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(PYTHON_VERSION)'
          - template: azure-devops/install-deps.yml
          - script: python -m pip wheel -w wheelhouse .
            displayName: Build wheel
          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: 'wheelhouse'
              artifactName: 'Wheels'

  - stage: PyPI
    displayName: "Upload wheels to PyPI"
    dependsOn: Build
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - job: upload_wheels
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'Wheels'
          - task: TwineAuthenticate@1
            displayName: 'Twine Authenticate'
            inputs:
              pythonUploadServiceConnection: pypiupload
          - task: UsePythonVersion@0
          - script: python -m pip install --upgrade pip setuptools wheel twine
            displayName: Install tools
          - script: |
              python -m twine upload -r "pypiupload" --config-file $(PYPIRC_PATH) $(System.ArtifactsDirectory)/Wheels/*
            displayName: Upload wheels

